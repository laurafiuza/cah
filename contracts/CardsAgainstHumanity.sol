pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";

// SPDX-License-Identifier: MIT
contract CardsAgainstHumanity is ERC721 {
  constructor() ERC721("Cards Against Humanity", "CAH") {}

  uint256 public tokenCounter = 0;
  uint256 public numCards = 5695;
  uint256 public sizeOfPack = 5;
  uint256 public costOfPack = 10;
  uint256[] public tokensWithOneBlank = [491,4399,1383,3596,1862,3894,5053,909,3259,438,2059,5013,2807,3453,1315,4503,2096,1257,2837,4759,467,1536,2437,1677,3626,5545,2784,2802,2785,4175,4240,2160,3362,4879,657,4880,1618,2067,3430,3956,3423,1581,1599,3901,888,5029,2945,4682,3541,4758,4561,203,2381,2241,3797,1785,164,1576,2400,790,5111,3674,1405,767,3568,1053,4101,5611,1065,2857,3724,101,188,1901,5076,858,3510,1298,4849,4351,977,14,4591,2388,5046,2038,841,3237,1630,3962,1366,4819,2340,2892,5,4087,4510,2637,2528,1643,3106,4427,5316,4033,1386,116,2219,1161,311,1834,3597,3839,2483,1307,2404,168,854,1433,3707,4882,3658,1139,2234,4853,4728,4274,3452,3937,1295,2240,2334,4543,480,2197,5660,3622,1496,4605,3200,5667,1428,5572,4079,2362,4341,1735,3535,5487,1396,5520,2112,370,738,3660,2423,4546,2558,3889,3696,939,4119,827,760,3806,2777,216,3391,2239,1467,1759,426,5114,3791,2306,2888,3550,1663,3742,3449,4865,5259,4369,4568,5497,5092,4872,4267,3126,76,2496,1399,4105,413,3694,3598,3275,335,4114,1835,800,2602,4209,3197,5281,2794,73,871,1789,2300,4181,2398,2650,208,1688,280,5143,5432,2454,264,2308,3394,67,1931,2676,1444,366,2823,2555,3190,4958,327,4675,5413,5344,5517,5095,2510,4163,2963,2780,5119,3647,889,792,329,356,3082,1439,4362,3943,4962,2063,5077,685,4493,1872,739,2600,592,3306,1371,1461,2841,4743,1198,901,4238,4740,2988,4917,4431,1606,3238,4133,3061,5164,2359,1294,4625,5117,4881,5276,1798,1357,1087,157,1734,4180,4329,4713,1907,1414,3788,525,4453,4204,310,2861,3729,2819,341,5063,5556,3047,4304,3810,3060,689,4057,5074,5500,3792,2952,72,5414,5246,5176,3809,224,2675,1220,5435,2320,3365,651,3410,1360,2307,3915,3525,2349,3629,2042,1894,3969,720,4723,2920,64,3188,1608,3761,563,822,4830,1822,2863,5131,2498,2866,702,4157,2911,2628,4165,3565,4938,2493,4667,4418,4288,1760,4662,3758,2390,2617,3726,893,3377,58,4055,5427,3587,2044,5393,4908,227,732,2975,2874,1144,3705,4814,3109,2196,3557,1344,969,1253,4997,5233,1377,5032,4496,406,5648,2055,4166,1586,3250,111,709,1624,4980,4992,4215,3765,1905,2058,1311,1578,5640,2060,2538,4639,2886,1114,554,3650,4382,3257,5358,4047,255,4620,2242,1722,2633,5601,5686,2827,5323,2654,5099,4424,5452,2831,1558,39,913,3843,811,18,4391,3511,1200,3219,247,1802,1956,364,2607,2693,3515,1591,381,1263,3676,2282,1300,3874,3923,3594,4444,1006,4342,3716,5288,5236,662,2817,4614,5476,5629,3529,2876,2644,3069,3169,925,254,110,1485,3265,1877,779,705,3752,2504,4099,5329,874,3683,4960,1032,5217,933,950,5589,155,5220,719,3363,2765,270,5559,1125,4360,5539,4398,3252,2894,3886,2358,4648,1542,4993,3207,4111,2414,1660,3714,536,1625,3087,2014,1776,276,4117,4808,4854,4050,3802,5171,1620,1408,4082,2781,2730,5570,1031,2338,2341,3478,4636,1570,3783,86,2990,204,4816,3728,4328,3291,5049,4765,3508,4113,5129,1671,1332,4475,1751,692,5253,1793,2734,2012,2605,4367,1866,5245,1199,3722,1529,3928,3464,2458,5479,1912,3004,550,4762,358,3502,80,4281,4857,897,3408,1229,261,4343,3171,3141,1110,3340,1116,1904,712,3035,4174,5190,3799,0,1680,4656,1153,1898,2248,4651,3303,4710,2925,4002,1566,3329,5313,733,10,1929,1846,1518,4121,896,1515,1288,1320,395,1854,3858,799,1621,5486,228,4709,1986,604,4340,1948,3104,1000,2007,5445,3283,213,1395,646,5548,4984,1639,4236,587,2101,4612,1679,2034,4915,2186,5197,2782,3456,3921,2350,5250,231,40,1449,4552,1236,2531,5126,1512,2931,2645,2092,4902,4012,5407,2503,4035,2997,3383,4957,547,1221,153,2156,2582,4649,5170,857,3281,1870,3808,5637,2783,2208,3249,1775,3577,4347,1838,121,1792,4095,2704,4826,2415,2201,427,2324,1832,2852,1738,162,304,2576,1194,716,4473,3942,4060,1044,4948,1351,529,941,3790,1535,2532,5200,1404,397,696,4436,5158,2335,3307,4932,2674,625,1707,5638,3081,2561,2,4115,946,108,1654,278,3431,4125,4626,1067,5110,2312,1398,1256,3868,1154,2370,5155,4982,2111,4470,1828,249,757,4860,1514,3672,3519,5064,1674,5501,1033,4063,3305,1490,175,729,1375,725,3409,257,974,2371,283,2097,287,1804,3636,2469,2803,4783,848,3978,1489,4533,1638,3023,567,3173,5183,557,695,4,2790,2625,3914,5270,3319,3327,5399,2175,1650,4039,2691,2130,332,3441,2788,5144,109,429,2062,882,2913,867,150,833,4505,2815,5555,4235,5239,4370,5160,4421,230,4417,4206,2408,1689,3479,431,5566,2598,488,4598,4923,3254,1696,2323,1667,1839,4617,177,4985,4168,4754,2609,383,2387,2845,3777,2053,4257,608,840,581,5400,5018,1095,5165,4988,1730,5467,377,446,3841,2896,801,4852,2228,4565,3836,1736,2354,5485,683,3932,3178,5020,286,4243,5605,3757,5168,972,3941,3378,4131,1869,1649,3898,1896,1027,2614,2669,1742,894,4253,3438,1887,2150,2848,4699,917,1644,2246,4320,5263,2466,5482,947,1336,3222,459,3847,2444,3747];
  uint256[] public tokensWithTwoBlanks = [2396,699,3939,1712,2172,354,2124,2588,1254,420,2714,2445,1582,4672,1724,4927,142,2281,4451,5301,4876,5027,334,5439,5581,4756,5593,34,2968,915,4072,3750,452,2893,2048,1166,2965,1170,2630,1521,307,3014,5100,68,3549,937,3776,4964,3964,27,5269,4389,4164,3079,2345,1179,2374,1312,1384,1184,5123,3861,3089,4152,4918,1708,1266,2204,2369,4046,516,324,4276,91,4155,5354,2993,3455,5579,2411,3411,5443,1926,3526,3024,1830,4553,25,3803,3293,4390,964,4935,3437,487,2399,3481,849,2274,4365];
  function claimPack(address to) external payable {
    require (tokenCounter < numCards, "All tokens have been claimed.");
    require (msg.value >= costOfPack, "Insufficient funds sent; cost = 10");
    for (uint256 i = 0; i < sizeOfPack; i++) {
      _mint(to, tokenCounter);
      tokenCounter++;
    }
  }
  function getNumberOfBlanks(uint256 tokenId) external view returns (uint256) {
    require(tokenId < numCards, "TokenID non existent.");
    if (tokenId == 4569 || tokenId == 4048) return 3;
    for (uint256 j = 0; j < tokensWithOneBlank.length; j++) {
      if (tokensWithOneBlank[j] == tokenId) return 1;
    }
    for (uint256 j = 0; j < tokensWithTwoBlanks.length; j++) {
      if (tokensWithTwoBlanks[j] == tokenId) return 2;
    }
    return 0;
  }
  function _baseURI() internal pure override returns (string memory) {
    return "https://gateway.pinata.cloud/ipfs/Qmb3Z8WaBPxyqYCiGEu4yoNU6vbnt6tM5U9EFdKp6cgKa6/";
  }

}
